{% extends "chart-editor.twig" %}

{% block content %}

{{ parent() }}

<style type="text/css">

table.htCore tr td {
    font-size: 1.1em;
    font-family: Helvetica;
    font-weight: 400;
    padding: 3px 6px;
}

.table thead th {
    cursor: pointer;
}

.table thead th.ignored {
    background: #b99;
}
.table td.ignored {
    color: #999;
    text-decoration: line-through
}

</style>
<link rel="stylesheet" type="text/css" href="/static/vendor/handsontable/jquery.handsontable.full.css">
<link rel="stylesheet" type="text/css" href="/static/vendor/handsontable/jquery.handsontable.bootstrap.css">
<script type="text/javascript" src="/static/vendor/handsontable/jquery.handsontable.full.js"></script>
<script type="text/javascript">
$(function() {

    var chart = dw.backend.currentChart,
        dataset;

    chart.onChange(reload);

    chart.sync('#describe-source-name', 'metadata.describe.source-name');
    chart.sync('#describe-source-url', 'metadata.describe.source-url');
    chart.sync('input:radio[name=transpose]', 'metadata.data.transpose');

    chart.sync('#number-format', 'metadata.describe.number-format');
    chart.sync('#number-divisor', 'metadata.describe.number-divisor');
    chart.sync('#number-append', 'metadata.describe.number-append');
    chart.sync('#number-prepend', 'metadata.describe.number-prepend');

    chart.sync('#has-headers', 'metadata.data.horizontal-header');

    // swap between currency and unit
    function swapUnitAndCurrency() {
        if ($('#number-format').val()[0] == 'c') {
            $('#number-currency').show();
            $('#number-unit').hide();
        } else {
            $('#number-currency').hide();
            $('#number-unit').show();
        }
       //$('#number-currency, #number-unit, #number-divisor').attr('disabled', $('#number-format').val() == '-');
    }
    $('#number-format').change(swapUnitAndCurrency);
    swapUnitAndCurrency();

    // update currency in number-format select
    function updateCurrencyInNumberFormat() {
        var curOpt = $('#number-format option[value=c], #number-format option[value=c0]');
        Globalize.culture("{{ chartLocale }}").numberFormat.currency.symbol = $('#number-currency option:selected').data('symbol');
        curOpt.each(function(i, el) {
            el = $(el);
            el.html(Globalize.format(1234.567, el.val()));
        });
    }
    updateCurrencyInNumberFormat();
    $('#number-currency').change(updateCurrencyInNumberFormat);

    // update data table after format changes
    $('.number-format').change(function() {
        updateTable(dataset, chart);
    });

    function updateTable() {

        function isNone(val) {
            return val === null || val === undefined || (_.isNumber(val) && isNaN(val));
        }

        var data = [];

        var horzHeaders = chart.get('metadata.data.horizontal-header'),
            transpose = chart.get('metadata.data.transpose'),
            colCnt = dataset.numColumns(),
            i;

        dataset.ignoreIgnores = true;

        var tr = [];
        dataset.eachColumn(function(column) {
            tr.push((!isNone(column.name()) ? column.name() : ''));
        });
        data.push(tr);

        dataset.eachRow(function(row) {
            var tr = [];
            dataset.eachColumn(function(column, i) {
                var val = column.val(row);
                val = column.type() == 'number' ? chart.formatValue(val, true) :
                        column.type() == 'date' ? dw.utils.longDateFormat(column)(val) :
                        val;
                tr.push((!isNone(column.val(row)) ? $("<div />").html(val).text() : ''));
            });
            data.push(tr);
        });

        var ignoreSeries = _.clone(chart.get('metadata.data.ignore-columns', {}));

        function myRenderer(instance, td, row, col, prop, value, cellProperties) {
            Handsontable.TextCell.renderer.apply(this, arguments);
            if (parseInt(value, 10) < 0) { //if row contains negative number
                td.className = 'negative'; //add class "negative"
            } else {
                td.className = '';
            }
            if (row === 0) {
                td.style.borderBottom = '1px solid #000';
                td.style.fontWeight = 'bold';
                td.style.background = '#f0f0f0';
            } else {
                if (dataset.column(col).type() == 'text') {
                    td.style.color = '#000000';
                } else if (dataset.column(col).type() == 'date') {
                    td.style.color = '#39A832';
                    td.style.fontStyle = 'italic';
                    td.style.textAlign = 'center';
                } else { // number
                    td.style.color = '#297EA8';
                    td.style.textAlign = 'right';
                }
                td.style.background = row % 2 ? '#FFF' : '#f9f9f9';
            }

            if (ignoreSeries[data[0][col]]) {
                td.className = 'ignored';
            } else {
                td.className = '';
            }
        }

        $("#data-preview").handsontable({
            data: data,
            allowHtml: true,
            startRows: 6,
            startCols: 8,
            width: $("#data-preview").width(),
            height: 400,
            fixedRowsTop: horzHeaders ? 1: 0,
            rowHeaders: true,
            colHeaders: true,
            fillHandle: false,
            stretchH: 'all',
            cells: function (row, col, prop) {
                return {
                    renderer: myRenderer,
                    readOnly: true
                };
            }
        });

        $('#data-preview table').addClass('table table-bordered');

        // add event handler for ignoring data series
        $('.colHeader').each(function(i, el) {
            var th = $(el).parents('th');
            var sn = data[0][i];
            th.data('series', sn);
            if (ignoreSeries[sn]) th.addClass('ignored');
            th.click(function() {
                if (ignoreSeries[sn]) {
                    ignoreSeries[sn] = false;
                    th.removeClass('ignored');
                } else {
                    ignoreSeries[sn] = true;
                    th.addClass('ignored');
                }
                chart.set('metadata.data.ignore-columns', _.clone(ignoreSeries));
            });
        });
    }

    function reload(f) {
        console.log('chart reloaded');
        chart.load().done(function() {
            if (_.isUndefined(f)) {
                console.log('synchronizing header settings', $('#has-headers'));
                
            }
            dataset = chart.dataset();
            updateTable();
        });
    }

    $('#describe-source-url').blur(function() {
        var v = $(this).val();
        if (v.substr(0,2) != '//' && v.substr(0,7) != 'http://' &&  v.substr(0,8) != 'https://') {
            $(this).val('//'+v);
            chart.set('metadata.describe.source-url', $(this).val());
        }
    });

    reload();

    $('#describe-proceed').click(function(e) {
        chart.save();
    });

});

</script>

<div class="dw-create-describe chart-editor">

    <div class="row">

        <div class="span8">

            <h2>{% trans "Check and Describe Your Data" %}</h2>

            <p>
                {% trans "Please check if the data format was recognized correctly." %}
                {% trans "You can hide columns by clicking the table header." %}
            </p>

            <form class="form-inline">
                <div id="csv-parse-options" class="row">
                    <div class="span4">
                    </div>
                    <div class="span4">

                    </div>
                </div>
            </form>

            <div id="data-preview"></div>
        </div>

        <div class="span4"><div class="well">

            <h3>{% trans "Describe your data" %}</h3>
            
            <div style="margin-bottom:15px;">
                
                <div class="half">
                    <p>
                        <label class="radio"><input type="radio" name="transpose" value="yes" /> {% trans "Data series in rows" %}</label>
                        <label class="radio"><input type="radio" name="transpose" value="no" /> {% trans "Data series in columns" %}</label>
                    </p>

                </div><div class="half">
                    <p>
                        <label class="checkbox"><input id="has-headers" type="checkbox" checked="checked"> {% trans "First row as label" %}</label>
                    </p>
                </div>
                <div class="clearfix"></div>
            </div>

            <h3>{% trans "Output number format" %}</h3>

            <div class="form-horizontal compact">
                <div class="control-group">
                    <label class="control-label" for="text-title">{% trans "Decimals after point" %}</label>
                    <div class="controls">
                       <select id="number-format" class="select number-format" style="width:90%">
                            <option value="-">{% trans "keep original" %}</option>
                            {% for id, format in numberformats %}
                                <option value="{{ id }}">{{ format }}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>


                <div class="control-group">
                    <label class="control-label" for="text-title">{% trans "Prepend/Append" %}</label>
                    <div class="controls">
                        <input type="text" id="number-prepend" style="width:2em;text-align:right" /> # <input type="text" id="number-append" style="width:5em" />
                    </div>
                </div>


                <div class="control-group">
                    <label class="control-label" for="text-title">{% trans "Devide numbers by" %}</label>
                    <div class="controls">
                        <select class="number-format" id="number-divisor"  style="width:90%">
                            <option value="0">-</option>
                            <option value="3">{% trans "1000" %}</option>
                            <option value="6">{% trans "1 million" %}</option>
                            <option value="9">{% trans "1 billion" %}</option>
                            <optgroup label="⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯"></optgroup>
                            <option value="-2">{% trans "One Percent" %}</option>

                        </select>
                    </div>
                </div>

            </div>

            <h3>{% trans "Credit the source" %}</h3>
            <p>
                <label>{% trans "Who published the data in the first place?" %}</label>
                <input id="describe-source-name" type="text" placeholder="name of the organisation">
            </p>
            <p>
                <label>{% trans "If possible, please provide a link the source data" %}</label>
                <input id="describe-source-url" type="text" placeholder="http://">
            </p>
            <!--<h3>{% trans "Annotate data" %}</h3>
            <p>{% trans "To make the data more useful for your readers you can add details to individual data points or an entire series. This information will be displayed in the visualisations." %} <a href="#">{% trans "Learn more" %}</a></p>
            <button class="btn"><i class="icon-th-list"></i> {% trans "Annotate series" %}</button> <button class="btn"><i class="icon-th"></i> {% trans "Annotate data point" %}</button>
            -->

                <a href="visualize" class="submit pull-right btn btn-primary" id="describe-proceed">{% trans "Visualize" %} <i class="icon-chevron-right icon-white"></i></a>
                <a class="btn submit" href="upload"><i class="icon-chevron-left"></i> {% trans "Back" %}</a>
                <div class="clearfix"></div>
        </div></div>
    </div>

    <div class="row">
        <div class="span12">


        </div>
    </div>
</div>


{% endblock %}