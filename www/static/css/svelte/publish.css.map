{
  "version": 3,
  "file": "publish.css",
  "sources": [
    "../../../../src/node_modules/@datawrapper/controls/AlertDisplay.html",
    "../../../../src/node_modules/@datawrapper/controls/HelpDisplay.html",
    "../../../../src/node_modules/@datawrapper/controls/IconDisplay.html",
    "../../../../src/node_modules/@datawrapper/controls/publish/PublishButtonControl.html",
    "../../../../src/publish/ConfirmationModal.html",
    "../../../../src/publish/Publish.html",
    "../../../../src/publish/ShareEmbed.html"
  ],
  "sourcesContent": [
    "{#if visible}\n<div\n    class:alert-success=\"type==='success'\"\n    class:alert-warning=\"type==='warning'\"\n    class:alert-error=\"type==='error'\"\n    class:alert-info=\"type==='info'\"\n    class:alert-upgrade-info=\"type==='upgrade-info'\"\n    class=\"alert {class}\"\n>\n    {#if type ==='upgrade-info'}\n    <div class=\"icon\"><span class=\"upgrade-icon\">{@html upgradeIcon}</span></div>\n    <div><span class=\"title\">{__('upgrade-available')}</span> {@html __('upgrade-info')}</div>\n    {:else} {#if closeable}\n    <button type=\"button\" aria-label=\"close\" class=\"close\" on:click=\"close()\">&times;</button>\n    {/if}\n    <slot>content</slot>\n    {/if}\n</div>\n{/if}\n\n<style>\n    .alert :global(a) {\n        color: inherit;\n        text-decoration: underline;\n    }\n\n    .alert-warning {\n        background: #ffe;\n        border: 1px solid #e9cc7f;\n        color: #614a0d;\n    }\n    .alert-upgrade-info {\n        display: flex;\n        column-gap: 10px;\n        padding: 11px 35px 11px 9px;\n        color: #333333;\n        border-color: #dddddd;\n        background: transparent;\n    }\n    .alert-upgrade-info :global(a) {\n        color: #1d81a2;\n        text-decoration: none;\n    }\n    .alert-upgrade-info span.title {\n        color: #09bb9f;\n        font-weight: 700;\n    }\n    .upgrade-icon {\n        display: inline-flex;\n        border-width: 0px;\n        background-color: rgb(57, 243, 187, 0.25);\n        width: 18px;\n        height: 18px;\n        justify-content: center;\n        border-radius: 50%;\n    }\n    .upgrade-icon :global(svg) {\n        width: 12px;\n    }\n    .upgrade-icon :global(svg path) {\n        fill: #09bb9f;\n    }\n</style>\n\n<script>\n    import upgradeIcon from './utils/upgradeIconSvg';\n    import { __ } from '@datawrapper/shared/l10n';\n    export default {\n        data() {\n            return {\n                visible: false,\n                type: '',\n                closeable: true,\n                class: '',\n                closeFunc: false\n            };\n        },\n        methods: {\n            close() {\n                const { closeFunc } = this.get();\n                if (closeFunc) {\n                    closeFunc();\n                } else {\n                    this.set({ visible: false });\n                    this.fire('close');\n                }\n            }\n        },\n        helpers: {\n            upgradeIcon,\n            __\n        }\n    };\n</script>\n",
    "<div ref:helpDisplay on:mouseenter=\"show()\" on:mouseleave=\"hide()\" class=\"help {class} {type}\">\n    <span class=\"help-icon {type}\" class:visible=\"visible\">\n        {@html helpIcon}\n    </span>\n    {#if visible}\n    <div class=\"content {type}\">\n        {#if type === 'help'}\n        <i class=\"hat-icon im im-graduation-hat\"></i>\n        {/if} {#if type === 'upgrade-info'}\n        <div class=\"content-header\">{__('upgrade-available')}</div>\n        {/if}\n        <slot />\n    </div>\n    {/if}\n</div>\n\n<style type=\"text/css\">\n    .help {\n        float: right;\n        position: relative;\n        top: 4px;\n    }\n    .help-icon {\n        display: inline-flex;\n        width: 1.3em;\n        height: 1.3em;\n        border-radius: 50%;\n        border: 1px solid #ddd;\n        background: transparent;\n        text-align: center;\n        justify-content: center;\n        align-items: center;\n        color: #a5a5a5;\n        font-weight: 700;\n        font-size: 12px;\n        cursor: default;\n    }\n    .help-icon.help:hover {\n        background: #18a1cd;\n        border: 1px solid #18a1cd;\n        color: #f9f9f9;\n    }\n    .hat-icon {\n        font-size: 16px;\n        color: #fff;\n        position: absolute;\n        left: -15px;\n        top: 12px;\n    }\n    .help-icon.upgrade-info {\n        position: relative;\n        border-width: 0px;\n        background-color: rgb(57, 243, 187, 0.25);\n        width: 18px;\n        height: 18px;\n    }\n    .help-icon.upgrade-info.visible {\n        z-index: 1001;\n        background: rgb(57, 243, 187);\n    }\n    .help-icon.upgrade-info :global(svg) {\n        width: 12px;\n    }\n    .help-icon.upgrade-info :global(svg path) {\n        fill: #09bb9f;\n    }\n    .content {\n        position: absolute;\n        z-index: 1000;\n        color: #fff;\n    }\n    .content :global(img) {\n        max-width: none;\n    }\n    .content :global(a) {\n        color: white;\n        text-decoration: underline;\n    }\n    .content.help {\n        background: #18a1cd;\n        border-radius: 2px;\n        box-shadow: 3px 2px 2px rgba(0, 0, 0, 0.1);\n        text-indent: 25px;\n        top: -8px;\n        left: -5px;\n        padding: 8px;\n        width: 240px;\n    }\n    .content.upgrade-info {\n        background: #09bb9f;\n        border-radius: 4px;\n        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.14);\n        top: -14px;\n        left: -14px;\n        padding: 14px;\n        width: 212px;\n    }\n    .content .content-header {\n        font-weight: bold;\n        text-indent: 28px;\n        margin-bottom: 5px;\n    }\n</style>\n\n<script>\n    import { __ } from '@datawrapper/shared/l10n';\n    import upgradeIcon from './utils/upgradeIconSvg';\n\n    export default {\n        data() {\n            return {\n                visible: false,\n                class: '',\n                type: 'help'\n            };\n        },\n        computed: {\n            helpIcon({ type }) {\n                return type === 'upgrade-info' ? upgradeIcon : '?';\n            }\n        },\n        methods: {\n            show() {\n                const t = setTimeout(() => {\n                    this.set({ visible: true });\n                }, 400);\n                this.set({ t });\n            },\n            hide() {\n                const { t } = this.get();\n                clearTimeout(t);\n                this.set({ visible: false });\n            }\n        },\n        helpers: { __ }\n    };\n</script>\n",
    "<span\n    class=\"svg-icon {class}\"\n    class:spin\n    style=\"animation-timing-function: {timing}; animation-duration: {duration}; height:{size}; width:{size}; vertical-align: {valign};\"\n>\n    <svg style=\"height:{size}; width:{size}\">\n        <use style=\"fill: {color}\" xlink:href=\"{iconURL}\" />\n    </svg>\n</span>\n\n<style>\n    svg {\n        fill: currentColor;\n        color: inherit;\n    }\n\n    @keyframes spin {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(359deg);\n        }\n    }\n\n    .svg-icon {\n        display: inline-block;\n    }\n\n    .spin {\n        animation: spin 1.5s infinite linear;\n    }\n</style>\n\n<script>\n    // Path to SVG tile set on https://app.datawrapper.de:\n    const DEFAULT_ASSET_URL = '/lib/icons/symbol/svg/sprite.symbol.svg';\n\n    export default {\n        data() {\n            return {\n                icon: 'api',\n                size: '1em',\n                color: 'inherit',\n                valign: 'baseline',\n                class: '',\n                style: '',\n                assetURL: null,\n                spin: false,\n                timing: 'linear',\n                duration: '2s'\n            };\n        },\n        computed: {\n            iconURL: ({ icon, assetURL }) => `${assetURL || DEFAULT_ASSET_URL}#${icon}`\n        }\n    };\n</script>\n",
    "<div\n    class=\"publish-status\"\n    class:is-busy=\"publishing || unpublishing\"\n    class:is-published=\"published && !unpublishing && !publishing && !needsRepublish && !publishSuccess\"\n    class:alert=\"needsRepublish && !publishing\"\n    class:alert-success=\"publishSuccess\"\n>\n    <!-- Un-publish in progress -->\n    {#if unpublishing}\n    <IconDisplay {assetURL} icon=\"cloud-sync\" color=\"#858585\" size=\"30px\" />\n    <div class=\"message\">\n        {@html __(\"publish / progress / unpublishing\") }\n    </div>\n\n    <!-- Un-published successfully -->\n    {:elseif unpublished}\n    <IconDisplay {assetURL} icon=\"cloud-dotted\" color=\"#858585\" size=\"30px\" />\n    <div class=\"message\">\n        {@html __(\"publish / progress / unpublished\") }\n    </div>\n\n    <!-- Un-published visualization -->\n    {:elseif !published && !publishing}\n    <IconDisplay {assetURL} icon=\"cloud-dotted\" color=\"#858585\" size=\"30px\" class=\"pt-2\" />\n    <div class=\"message pt-2\">\n        {@html __('publish / publish-btn-intro') }\n    </div>\n\n    <!-- Publish in progress -->\n    {:elseif publishing}\n    <IconDisplay {assetURL} icon=\"cloud-sync\" color=\"#858585\" size=\"30px\" />\n    <div class=\"message\">\n        {@html __(\"publish / progress / publishing\") }\n    </div>\n\n    <!-- Needs re-publish -->\n    {:elseif needsRepublish && !publishing}\n    <IconDisplay {assetURL} icon=\"cloud-sync\" color=\"#FFB800\" size=\"30px\" />\n    <div class=\"message\">\n        {@html __('publish / republish') }\n    </div>\n\n    <!-- Published successfully -->\n    {:elseif published && publishSuccess && !needsRepublish}\n    <IconDisplay {assetURL} icon=\"cloud-check\" color=\"#000000\" size=\"30px\" />\n    <div class=\"message\">\n        {@html __('publish / publish-success') }\n    </div>\n\n    <!-- Published visualization (after reload) -->\n    {:elseif published && !needsRepublish}\n    <IconDisplay {assetURL} icon=\"cloud-check\" color=\"#000000\" size=\"30px\" />\n    <div class=\"message\">\n        {@html __('publish / published') }\n    </div>\n    {/if}\n\n    <div class=\"action\">\n        <button disabled=\"{ publishing || unpublishing }\" on:click=\"publish()\" class=\"button-wrapper\" class:is-unpublishing=\"unpublishing\">\n            {#if unpublishing}\n            <span class=\"title\">{ __('publish / unpublishing-btn') }</span>\n            {:elseif published}\n            <span class=\"button-republish\">\n                {#if publishing}\n                <IconDisplay {assetURL} icon=\"refresh\" spin size=\"28px\" color=\"#ffffff\" valign=\"middle\" class=\"mr-1\" />\n                <span>{ __('publish / publishing-btn') }</span>\n                {:else}\n                <IconDisplay {assetURL} icon=\"refresh\" size=\"28px\" color=\"#ffffff\" valign=\"middle\" class=\"mr-1\" />\n                <span>{ __('publish / republish-btn') }</span>\n                {/if}\n            </span>\n            {:else}\n            <span class=\"button-publish\" class:is-publishing=\"publishing\">\n                {#if publishing}\n                <IconDisplay {assetURL} icon=\"refresh\" spin size=\"28px\" color=\"#ffffff\" valign=\"middle\" class=\"mr-1\" />\n                <span>{ __('publish / publishing-btn') }</span>\n                {:else}\n                <IconDisplay {assetURL} icon=\"cloud-upload\" size=\"30px\" color=\"#ffffff\" class=\"cloud\" />\n                <span>{ __('publish / publish-btn') }</span>\n                {/if}\n            </span>\n            {/if}\n        </button>\n    </div>\n\n    <!-- show progress information after 3s -->\n    {#if publishing && publishWait > 3000}\n    <ul class=\"publish-progress unstyled\">\n        {#each progress as step,i}\n        <li>\n            {#if i < progress.length-1}\n            <IconDisplay {assetURL} icon=\"check-circle\" size=\"18px\" color=\"#468847\" valign=\"middle\" class=\"mr-2\" />\n            {:else}\n            <IconDisplay {assetURL} icon=\"loading-spinner\" size=\"18px\" valign=\"middle\" class=\"mr-2\" spin timing=\"steps(12)\" duration=\"1.5s\" />\n            {/if} {@html __('publish / status / '+step)}\n        </li>\n        {/each}\n    </ul>\n    {/if}\n</div>\n\n<!-- Unpublish -->\n{#if published && !publishing && !unpublishing}\n<p class=\"unpublish mt-2 mb-2\">\n    {@html __('publish / unpublish-intro')}\n    <button class=\"plain-link unpublish-button\" on:click=\"unpublish()\">\n        <IconDisplay {assetURL} icon=\"undo\" size=\"1.2em\" valign=\"-0.2em\" />{@html __('publish / unpublish-btn')}\n    </button>\n</p>\n{/if}\n\n<!-- Publish error -->\n{#if publishError}\n<AlertDisplay type=\"error\" visible=\"true\" class=\"mt-4 mb-2\">\n    {publishError}\n</AlertDisplay>\n{/if}\n\n<!-- Additional info, only shown intially -->\n{#if !published && !unpublished}\n<p class=\"publish-info pt-3\">{@html __('publish / publish-info-1')}</p>\n<p class=\"publish-info\">{@html __('publish / publish-info-2')}</p>\n{/if}\n\n<!-- Alert: Publish successful, redirects may need updating -->\n<AlertDisplay type=\"{redirectDisabled ? 'warning' : 'info'}\" visible=\"{published && publishSuccess && publicVersion > 1}\" class=\"mt-4 mb-2\">\n    {#if published && publishSuccess && publicVersion > 1}\n    <div class=\"embed-alert\">\n        {#if redirectDisabled}\n        <IconDisplay {assetURL} icon=\"warning\" size=\"20px\" color=\"#FFB800\" />\n        <p class=\"embed-message\">{@html __('publish / replace-embed')}</p>\n        {:else}\n        <IconDisplay {assetURL} icon=\"info-circle\" size=\"20px\" color=\"#3a87ad\" />\n        <p class=\"embed-message\">{@html __('publish / update-embed')}</p>\n        {/if}\n    </div>\n    {/if}\n</AlertDisplay>\n\n<style>\n    .publish-status {\n        padding: 15px;\n        margin: 0;\n        border: 1px solid #e5e5e5;\n        border-radius: 4px;\n        display: flex;\n        flex-wrap: wrap;\n        transition: all 0.3s;\n    }\n\n    .publish-status.is-busy {\n        opacity: 0.5;\n    }\n\n    .publish-status.is-published {\n        align-items: center;\n    }\n\n    .publish-progress {\n        width: 100%;\n        display: block;\n        padding-left: 50px;\n    }\n\n    .publish-progress li {\n        margin-top: 6px;\n        vertical-align: middle;\n        color: #000000;\n    }\n\n    .publish-progress li:last-child {\n        font-weight: bold;\n    }\n\n    .message {\n        flex: 1;\n        padding: 0 20px 0 15px;\n        color: #000000;\n    }\n\n    .message :global(em) {\n        color: #c71e1d;\n        font-weight: bold;\n        font-style: normal;\n    }\n\n    .publish-info {\n        font-weight: normal;\n    }\n\n    .unpublish {\n        font-size: 12px;\n        text-align: right;\n        font-weight: normal;\n        color: #858585;\n    }\n\n    .unpublish-button {\n        font-weight: bold;\n    }\n\n    .embed-alert {\n        display: flex;\n        flex-wrap: wrap;\n    }\n\n    .embed-message {\n        flex: 1;\n        margin: 0 12px;\n        font-weight: normal;\n    }\n\n    .button-publish {\n        min-height: 50px;\n        display: block;\n    }\n\n    .button-publish :global(.cloud) {\n        display: block;\n        margin: 0 auto;\n        position: relative;\n        top: -5px;\n    }\n\n    .button-publish.is-publishing {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    .button-wrapper {\n        min-width: 100%;\n        padding: 15px;\n        margin-top: 15px;\n        color: white;\n        background: #1d81a2;\n        border: 0;\n        border: 1px solid #cccccc;\n        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);\n        border-bottom-color: rgba(0, 0, 0, 0.25);\n        border-bottom-color: #b3b3b3;\n        border-radius: 4px;\n        box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);\n        font-weight: 500;\n        font-size: 18px;\n        line-height: 21px;\n        vertical-align: middle;\n        transition: all 0.3s;\n    }\n\n    .button-wrapper:hover,\n    .button-wrapper:focus,\n    .button-wrapper:active {\n        background: #15607a;\n    }\n\n    .button-wrapper:disabled {\n        background: #15607a;\n        cursor: default;\n    }\n\n    .button-wrapper.is-unpublishing {\n        background: transparent;\n        color: #000000;\n    }\n\n    .action {\n        flex: 0 0 100%;\n    }\n\n    /* Small screens */\n    @media only screen and (min-width: 500px) {\n        .button-wrapper {\n            margin: 0;\n        }\n\n        .action {\n            flex: inherit;\n        }\n    }\n\n    /* Medium sized screens */\n    @media only screen and (min-width: 768px) and (max-width: 1200px) {\n        .button-wrapper {\n            min-width: 100%;\n            margin-top: 12px;\n        }\n\n        .action {\n            flex: 0 0 100%;\n        }\n    }\n\n    /* Large screens */\n    @media only screen and (min-width: 1200px) {\n        .button-wrapper {\n            min-width: 160px;\n            max-width: 200px;\n            margin-top: 0;\n        }\n\n        .action {\n            flex: inherit;\n        }\n    }\n</style>\n\n<script>\n    import { __ } from '@datawrapper/shared/l10n';\n    import { trackEvent } from '@datawrapper/shared/analytics';\n    import IconDisplay from '../IconDisplay.html';\n    import AlertDisplay from '../AlertDisplay.html';\n\n    export default {\n        components: {\n            IconDisplay,\n            AlertDisplay\n        },\n\n        data() {\n            return {\n                published: false,\n                publishing: false,\n                publishStarted: 0,\n                now: 0,\n                publishError: false,\n                publishSuccess: false,\n                needsRepublish: false,\n                progress: [],\n                redirectDisabled: false,\n                publicVersion: 0,\n                assetURL: null\n            };\n        },\n\n        computed: {\n            publishWait({ publishStarted, now }) {\n                return publishStarted > 0 ? now - publishStarted : 0;\n            },\n            publishSuccess({ progress, publishing }) {\n                return progress && progress.includes('done') && !publishing;\n            }\n        },\n\n        helpers: { __ },\n\n        methods: {\n            publish() {\n                trackEvent('Chart Editor', 'publish');\n                this.fire('publish');\n            },\n            unpublish() {\n                trackEvent('Chart Editor', 'unpublish');\n                this.fire('unpublish');\n            }\n        }\n    };\n</script>\n",
    "<div class=\"modal hide\" {id}>\n    <div on:keyup|stopPropagation class=\"modal-body\">\n        <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"{__('publish / unpublish-confirmation / close')}\"\n        >\n            <IconDisplay icon=\"close\" size=\"20px\" />\n        </button>\n        <div class=\"modal-content\">\n            <h1 class=\"modal-title\">{__('publish / unpublish-confirmation / title')}</h1>\n            <p>{@html __('publish / unpublish-confirmation / explanation')}</p>\n            <div class=\"actions pt-4 mt-4\">\n                <button class=\"btn back\" data-dismiss=\"modal\">\n                    {__('publish / unpublish-confirmation / back')}\n                </button>\n                <button class=\"btn btn-danger\" data-dismiss=\"modal\" on:click=\"fire('confirm')\">\n                    <IconDisplay icon=\"undo\" class=\"mr-1\" size=\"1.3em\" valign=\"-0.3em\" />\n                    {__('publish / unpublish-confirmation / unpublish')}\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n    .modal-title {\n        font-size: 18px;\n        font-weight: 500;\n    }\n\n    .modal-content {\n        padding: 25px 30px;\n        color: #333333;\n    }\n\n    .actions {\n        border-top: 1px solid #ececec;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .close {\n        opacity: 0.4;\n    }\n\n    .close:hover,\n    .close:focus,\n    .close:active {\n        opacity: 0.5;\n    }\n\n    .btn {\n        padding-left: 25px;\n        padding-right: 25px;\n    }\n\n    .back {\n        font-weight: bold;\n    }\n\n    .modal-content p {\n        font-weight: normal;\n    }\n</style>\n\n<script>\n    import { __ } from '@datawrapper/shared/l10n';\n    import IconDisplay from '@datawrapper/controls/IconDisplay.html';\n\n    export default {\n        components: { IconDisplay },\n        helpers: { __ }\n    };\n</script>\n",
    "<h2>{@html __('publish / title') }</h2>\n\n<div>\n    <PublishButton\n        {published}\n        {publishing}\n        {publishStarted}\n        {now}\n        {progress}\n        {unpublished}\n        {unpublishing}\n        {redirectDisabled}\n        needsRepublish=\"{needs_republish}\"\n        publishError=\"{publish_error}\"\n        publicVersion=\"{$publicVersion}\"\n        on:publish=\"publish()\"\n        on:unpublish=\"requestUnpublishConfirmation()\"\n    />\n\n    <ShareEmbed\n        {pluginShareurls}\n        {embedTemplates}\n        {published}\n        {shareurlType}\n        {embedType}\n        metadata=\"{$metadata}\"\n        id=\"{$id}\"\n        publicUrl=\"{$publicUrl}\"\n    />\n\n    <!-- BEFORE EXPORT -->\n    <svelte:component this=\"{beforeExport}\" />\n\n    <!-- EXPORT -->\n    <div class=\"export-and-duplicate\">\n        <div>\n            <h2 class=\"pad-top\">{@html exportHed}</h2>\n            {#if exportIntro}\n            <p>{@html exportIntro}</p>\n            {/if}\n        </div>\n\n        <ul class=\"chart-actions\">\n            {#each sortedChartActions as action} {#if action}\n            <li\n                class=\"action action-{action.id} {action.class||''} {action.id == active_action ? 'active':''}\"\n            >\n                <a\n                    on:click|preventDefault=\"select(action)\"\n                    role=\"button\"\n                    href=\"{action.url ? action.url : '#'+action.id}\"\n                >\n                    <i class=\"fa fa-{action.icon}\"></i\n                    ><span class=\"title\">{@html action.title}</span>\n                </a>\n                {#if action.banner && action.banner.text != \"FALSE\" && action.banner.text != \"-\"}\n                <div class=\"banner\" style=\"{action.banner.style}\">{action.banner.text}</div>\n                {/if}\n            </li>\n            {/if} {/each}\n        </ul>\n\n        <svelte:component\n            ref:action\n            this=\"{Action}\"\n            visible=\"{true}\"\n            show=\"{false}\"\n            data=\"{actionData}\"\n            {store}\n        />\n    </div>\n</div>\n\n<ConfirmationModal id=\"modalConfirmation\" on:confirm=\"unpublish()\" />\n\n<style>\n    .copy-success {\n        font-size: 11px;\n        color: #9c9;\n        font-style: italic;\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 5s ease-in;\n        margin-top: -10px;\n        position: absolute;\n    }\n    .copy-success.show {\n        opacity: 1;\n        transition: none;\n    }\n</style>\n\n<script>\n    /* globals $ */\n    /* eslint camelcase: \"off\" */\n    import PublishButton from '@datawrapper/controls/publish/PublishButtonControl.html';\n    import { __ } from '@datawrapper/shared/l10n';\n    import { trackEvent } from '@datawrapper/shared/analytics';\n    import httpReq from '@datawrapper/shared/httpReq';\n    import { loadScript, loadStylesheet } from '@datawrapper/shared/fetch';\n\n    import ConfirmationModal from './ConfirmationModal.html';\n    import ShareEmbed from './ShareEmbed.html';\n    import Action from './Action.html';\n\n    let initial_auto_publish = true;\n\n    export default {\n        components: {\n            PublishButton,\n            ConfirmationModal,\n            ShareEmbed\n        },\n        data() {\n            return {\n                active_action: '',\n                embedTemplates: [],\n                pluginShareurls: [],\n                published: false,\n                publishing: false,\n                publishStarted: 0,\n                unpublished: false,\n                unpublishing: false,\n                needs_republish: false,\n                publish_error: false,\n                auto_publish: false,\n                progress: [],\n                redirectDisabled: false,\n                shareurlType: 'default',\n                embedType: 'responsive',\n                Action,\n                actionData: null,\n                store: null,\n                chartActions: [\n                    {\n                        id: 'duplicate',\n                        icon: 'code-fork',\n                        title: __('Duplicate'),\n                        order: 500,\n                        action: 'duplicate'\n                    }\n                ],\n                publishHed: '',\n                publishIntro: '',\n                beforeExport: null,\n                exportHed: __('publish / export-duplicate'),\n                exportIntro: __('publish / export-duplicate / intro'),\n                embedCode: '',\n                statusUrl: false\n            };\n        },\n        computed: {\n            sortedChartActions({ chartActions, $actions }) {\n                return chartActions\n                    .concat($actions)\n                    .filter(a => a.id !== 'publish-s3')\n                    .sort((a, b) => a.order - b.order);\n            },\n\n            publishWait({ publishStarted, now }) {\n                return publishStarted > 0 ? now - publishStarted : 0;\n            }\n        },\n        helpers: { __ },\n        methods: {\n            publish() {\n                this.set({\n                    publishing: true,\n                    publishStarted: new Date().getTime(),\n                    now: new Date().getTime(),\n                    progress: [],\n                    unpublished: false,\n                    publish_error: false\n                });\n\n                const chart = this.store;\n\n                trackEvent('Chart Editor', 'publish');\n\n                const chartId = chart.get().id;\n\n                chart.store(() => {\n                    this.set({\n                        statusUrl: `/v3/charts/${chartId}/publish/status/${\n                            chart.get().publicVersion\n                        }`\n                    });\n                    // publish chart\n                    httpReq\n                        .post(`/v3/charts/${chartId}/publish`)\n                        .then(res => {\n                            this.set({\n                                published: true,\n                                progress: ['done']\n                            });\n                            httpReq.get(`/v3/charts/${chartId}`).then(res => {\n                                trackEvent('Chart Editor', 'publish-success');\n                                this.publishFinished(res);\n                            });\n                        })\n                        .catch(error => {\n                            this.set({\n                                publish_error: error.message,\n                                publishing: false,\n                                progress: []\n                            });\n                            trackEvent('Chart Editor', 'publish-error', error.message);\n                        });\n\n                    setTimeout(() => {\n                        const { publishing } = this.get();\n                        if (publishing) this.updateStatus();\n                    }, 1000);\n                });\n            },\n\n            unpublish() {\n                const chartId = this.store.get().id;\n\n                this.set({\n                    progress: [],\n                    unpublishing: true,\n                    needs_republish: false\n                });\n\n                httpReq\n                    .post(`/v3/charts/${chartId}/unpublish`)\n                    .then(res => {\n                        httpReq.get(`/v3/charts/${chartId}`).then(chartInfo => {\n                            this.store.set(chartInfo);\n                            trackEvent('Chart Editor', 'unpublish-success');\n\n                            // slow down visual response, reduces flickering:\n                            setTimeout(() => {\n                                this.set({\n                                    published: false,\n                                    unpublishing: false,\n                                    unpublished: true\n                                });\n                            }, 1000);\n                        });\n                    })\n                    .catch(error => {\n                        this.set({ publish_error: error.message, unpublishing: false });\n                        trackEvent('Chart Editor', 'unpublish-error', error.message);\n                    });\n            },\n\n            requestUnpublishConfirmation() {\n                this.set({ publish_error: null });\n                $('#modalConfirmation').modal();\n            },\n\n            updateStatus() {\n                const { statusUrl } = this.get();\n                if (!statusUrl) return;\n                httpReq.get(statusUrl).then(res => {\n                    this.set({\n                        progress: res.progress || [],\n                        now: new Date().getTime()\n                    });\n                    const { publishing } = this.get();\n                    if (publishing) {\n                        setTimeout(() => {\n                            this.updateStatus();\n                        }, 500);\n                    }\n                });\n            },\n\n            publishFinished(chartInfo) {\n                this.set({\n                    progress: ['done'],\n                    published: true,\n                    publishStarted: 0,\n                    needs_republish: false,\n                    publishing: false\n                });\n                this.store.set({\n                    lastEditStep: 5\n                });\n\n                window.parent.postMessage(\n                    {\n                        source: 'datawrapper',\n                        type: 'chart-publish',\n                        chartId: chartInfo.id\n                    },\n                    '*'\n                );\n                this.store.set(chartInfo);\n            },\n\n            select(action) {\n                // set hash which is used to show the action module\n                window.location.hash = action.id;\n\n                const { active_action } = this.get();\n                if (action.id === active_action) {\n                    // unselect current action\n                    this.refs.action.set({ show: false });\n                    return this.set({ active_action: '', Action });\n                }\n                this.set({ active_action: action.id });\n                if (action.mod) {\n                    if (action.mod.App) {\n                        this.refs.action.set({ show: false });\n                        if (action.mod.data) this.refs.action.set(action.mod.data); // TODO Remove once all action plugins support the 'data' property.\n                        this.set({\n                            Action: action.mod.App,\n                            actionData: action.mod.data,\n                            store: this.store\n                        });\n                        this.refs.action.set({ show: true });\n                    } else {\n                        // todo: show loading indicator\n                        this.set({ Action });\n                        this.refs.action.set({ loading: true });\n                        if (action.mod.css) {\n                            loadStylesheet(action.mod.css);\n                        }\n                        loadScript(action.mod.src, () => {\n                            setTimeout(() => {\n                                require([action.mod.id], mod => {\n                                    // todo: HIDE loading indicator\n                                    Object.assign(action.mod, mod);\n                                    this.set({\n                                        Action: action.mod.App,\n                                        actionData: action.mod.data,\n                                        store: this.store\n                                    });\n                                    this.refs.action.set({ show: true });\n                                    if (mod.init) mod.init(this.refs.action);\n                                    if (action.mod.data) this.refs.action.set(action.mod.data); // TODO Remove once all action plugins support the 'data' property.\n                                });\n                            }, 200);\n                        });\n                    }\n                } else if (action.action && this[action.action]) {\n                    this.set({ Action });\n                    this[action.action]();\n                } else if (typeof action.action === 'function') {\n                    this.set({ Action });\n                    action.action();\n                }\n            },\n\n            duplicate() {\n                const { id } = this.store.get();\n                trackEvent('Chart Editor', 'duplicate');\n                httpReq.post(`/v3/charts/${id}/copy`).then(res => {\n                    // redirect to copied chart\n                    window.location.href = `/edit/${res.id}/visualize`;\n                });\n            }\n        },\n\n        oncreate() {\n            const { lastEditStep } = this.store.get();\n            this.set({ published: lastEditStep > 4 });\n            // store reference to publish step\n            window.dw.backend.fire('edit.publish.oncreate', this);\n\n            // Immediately select an action, when location hash is already set.\n            const activeActionId = window.location.hash.slice(1);\n            if (activeActionId) {\n                const { chartActions, $actions } = this.get();\n                const activeAction = chartActions\n                    .concat($actions)\n                    .find(action => action.id === activeActionId);\n                if (activeAction) {\n                    this.select(activeAction);\n                }\n            }\n        },\n\n        onstate({ changed, current }) {\n            const userDataReady = window.dw && window.dw.backend && window.dw.backend.setUserData;\n            if (changed.embedType && userDataReady) {\n                const data = window.dw.backend.__userData;\n                if (!current.embedType || !data) return;\n                data.embedType = current.embedType;\n                window.dw.backend.setUserData(data);\n            }\n            if (changed.shareurlType && userDataReady) {\n                const data = window.dw.backend.__userData;\n                if (!current.shareurlType || !data) return;\n                data.shareurlType = current.shareurlType;\n                window.dw.backend.setUserData(data);\n            }\n            if (changed.published) {\n                const publishStep = window.document.querySelector(\n                    '.dw-create-publish .publish-step'\n                );\n                if (publishStep) {\n                    publishStep.classList[current.published ? 'add' : 'remove']('is-published');\n                }\n            }\n            if (changed.auto_publish) {\n                if (current.auto_publish && initial_auto_publish) {\n                    this.publish();\n                    initial_auto_publish = false;\n                    window.history.replaceState('', '', window.location.pathname);\n                }\n            }\n        }\n    };\n</script>\n",
    "<div style=\"margin-top: 30px;\" class=\"{published?'':'inactive'}\">\n    <h2>{@html __('publish / share-embed') }</h2>\n    <div class=\"block\">\n        <i class=\"icon fa fa-link fa-fw\"></i>\n        <div class=\"ctrls\">\n            <div class=\"h\">\n                <b>{@html __('publish / share-url') }</b>\n                <div class=\"embed-options\">\n                    <label class=\"radio\">\n                        <input\n                            bind:group=\"shareurlType\"\n                            value=\"default\"\n                            type=\"radio\"\n                            name=\"url-type\"\n                        />\n                        {@html __('publish / share-url / fullscreen') }\n                    </label>\n                    {#each pluginShareurls as tpl}\n                    <label class=\"radio\"\n                        ><input\n                            bind:group=\"shareurlType\"\n                            value=\"{tpl.id}\"\n                            type=\"radio\"\n                            name=\"url-type\"\n                        />\n                        {@html tpl.name}</label\n                    >\n                    {/each}\n                </div>\n            </div>\n            <div class=\"inpt\">\n                <a target=\"_blank\" class=\"share-url\" href=\"{shareUrl}\">{shareUrl}</a>\n            </div>\n        </div>\n        <HelpDisplay>\n            <div>{@html __('publish / help / share-url') }</div>\n        </HelpDisplay>\n    </div>\n\n    <div class=\"block\">\n        <i class=\"icon fa fa-code fa-fw\"></i>\n        <div class=\"ctrls\">\n            <div class=\"h\">\n                <b>{@html __('publish / embed') }</b>\n                <div class=\"embed-options\">\n                    {#each embedTemplates as tpl}\n                    <label class=\"radio\"\n                        ><input type=\"radio\" bind:group=\"embedType\" value=\"{tpl.id}\" /> { tpl.title\n                        }</label\n                    >\n                    {/each}\n                </div>\n            </div>\n            <div class=\"inpt\">\n                <textarea\n                    ref:embedInput\n                    type=\"text\"\n                    class=\"input embed-code\"\n                    readonly\n                    value=\"{embedCode}\"\n                ></textarea>\n                <button class=\"btn btn-copy\" on:click=\"copy(embedCode)\" title=\"copy\">\n                    <i class=\"fa fa-copy\"></i> { __('publish / copy') }\n                </button>\n                <div class=\"copy-success {copySuccess ? 'show':''}\">\n                    { __('publish / copy-success') }\n                </div>\n            </div>\n        </div>\n        <HelpDisplay>\n            <div>\n                {@html __('publish / embed / help') } {#each embedTemplates.slice(2) as tpl}\n                <div><b>{tpl.title}:</b> {@html purifyHtml(tpl.text) }</div>\n                {/each}\n            </div>\n        </HelpDisplay>\n    </div>\n</div>\n\n<style>\n    input[type='radio'] {\n        vertical-align: baseline !important;\n        margin-left: -20px !important;\n    }\n    a.share-url {\n        font-size: 18px;\n    }\n    .copy-success {\n        font-size: 11px;\n        color: #9c9;\n        font-style: italic;\n        opacity: 0;\n        pointer-events: none;\n        transition: opacity 5s ease-in;\n        margin-top: -10px;\n        position: absolute;\n    }\n    .copy-success.show {\n        opacity: 1;\n        transition: none;\n    }\n    .embed-options {\n        display: inline-block;\n    }\n    .embed-code {\n        height: 20px;\n    }\n</style>\n\n<script>\n    import HelpDisplay from '@datawrapper/controls/HelpDisplay.html';\n    import purifyHtml from '@datawrapper/shared/purifyHtml';\n    import { __ } from '@datawrapper/shared/l10n';\n    import { trackEvent } from '@datawrapper/shared/analytics';\n    import get from '@datawrapper/shared/get';\n\n    export default {\n        components: {\n            HelpDisplay\n        },\n        data() {\n            return {\n                embedTemplates: [],\n                pluginShareurls: [],\n                published: false,\n                shareurlType: 'default',\n                embedType: 'responsive',\n                copySuccess: false,\n                embedMethod: 'embed-method-responsive'\n            };\n        },\n        computed: {\n            shareUrl({ shareurlType, id, publicUrl, metadata, pluginShareurls, published }) {\n                if (!published) return 'https://www.datawrapper.de/...';\n                if (shareurlType === 'default') return publicUrl;\n                let url = '';\n\n                pluginShareurls.forEach(t => {\n                    if (t.id === shareurlType) {\n                        url = t.url.replace(/%chart_id%/g, id);\n\n                        url = url.replace(/%(.*?)%/g, (match, path) => {\n                            return get({ id, metadata }, path);\n                        });\n                    }\n                });\n                return url;\n            },\n            embedCode({ embedType, publicUrl, metadata }) {\n                if (!metadata) return '';\n                if (metadata.publish && !metadata.publish['embed-codes']) {\n                    return `<iframe src=\"${publicUrl}\" width=\"100%\" height=\"${metadata.publish['embed-height']}\" scrolling=\"no\" frameborder=\"0\" allowtransparency=\"true\"></iframe>`;\n                }\n                if (metadata.publish['embed-codes']['embed-method-' + embedType]) {\n                    return metadata.publish['embed-codes']['embed-method-' + embedType];\n                } else {\n                    return '';\n                }\n            }\n        },\n        helpers: {\n            __,\n            purifyHtml\n        },\n        methods: {\n            copy() {\n                const me = this;\n                me.refs.embedInput.select();\n                try {\n                    var successful = document.execCommand('copy');\n                    if (successful) {\n                        trackEvent('Chart Editor', 'embedcode-copy');\n                        me.set({ copySuccess: true });\n                        setTimeout(() => me.set({ copySuccess: false }), 300);\n                    }\n                } catch (err) {\n                    // console.log('Oops, unable to copy');\n                }\n            }\n        }\n    };\n</script>\n"
  ],
  "names": [],
  "mappings": "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"
}